[{"C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\index.js":"1","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\App.js":"3","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Day.js":"4","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Box.js":"5","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Display.js":"6","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Locale.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":307,"mtime":1607376009790,"results":"11","hashOfConfig":"9"},{"size":3658,"mtime":1607366946650,"results":"12","hashOfConfig":"9"},{"size":833,"mtime":1607366901218,"results":"13","hashOfConfig":"9"},{"size":857,"mtime":1607382014344,"results":"14","hashOfConfig":"9"},{"size":4126,"mtime":1607460995010,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"eunxd1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\index.js",[],["33","34"],"C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\App.js",["35","36"],"import logo from './logo.svg';\nimport './App.css';\nimport Day from './components/Day';\nimport Locale from './components/Locale';\n// import Display from './components/Display';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Locale/>\n      {/* <Day/> */}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Day.js",["37"],"import React,{ useState,useEffect } from 'react'\r\nimport './Day.css'\r\nimport Box from './Box'\r\n\r\nfunction Day() {\r\n    const [sols, setSols] = useState([])\r\n    const [selectedSolIndex,setSelectedSolIndex]=useState(2)\r\n    const [selectedSol,setSelectedSol]=useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        getWeather().then((sols) => {\r\n            setSols(sols)\r\n            console.log(sols)\r\n            setSelectedSol(sols[selectedSolIndex])\r\n        })\r\n    }, [selectedSol])\r\n    \r\n    console.log(sols)\r\n    console.log(selectedSol)\r\n    const getWeather = () => {\r\n        return  fetch('https://api.nasa.gov/insight_weather/?api_key=DEMO_KEY&feedtype=json&ver=1.0')\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        const { sol_keys, validity_checks, ...solData } = data\r\n                        // console.log(solData)\r\n                        // console.log(data)\r\n                        return  Object.entries(solData).map(([sol, data]) => {\r\n                                    return {\r\n                                        sol: sol,\r\n                                        maxTemp: data.PRE.av,\r\n                                        season: data.Season,\r\n                                        // minTemp: data.AT.mn,\r\n                                        // windSpeed:data.HWS.av,\r\n                                        dateDay: new  Date(data.First_UTC)\r\n                                    }\r\n                            })\r\n                    })\r\n    }\r\n\r\n    \r\n    function displayDate(dateDay) {\r\n        return dateDay.toLocaleDateString(\r\n                undefined,\r\n                {day:'numeric',month:'long'}\r\n            )\r\n    }\r\n    \r\n    return (\r\n        <div className='day'>\r\n            <div className=\"banner\">\r\n                <div className=\"pane-details\">\r\n                    <div className=\"name\">\r\n                        <h1>Sol { selectedSol.sol }</h1>\r\n                        <h3>  {selectedSol &&  displayDate(selectedSol.dateDay) }</h3>\r\n                    </div>\r\n                    <div className=\"temp\">\r\n                        <h2>Temperature</h2>\r\n                        <div className=\"low\">\r\n                            <h4>Low: <span>5&deg;   C</span></h4>\r\n                        </div>\r\n                        <div className=\"high\">\r\n                            <h4>High: <span>10&deg; C</span></h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"wind\">\r\n                        <h2>Wind Speed</h2>\r\n                        <div className=\"avg\">\r\n                            <h4>Average Speed :  <span>10 kph</span></h4>\r\n                        </div>\r\n                        <div className=\"avg\">\r\n                            <h4>Season: <span>{ selectedSol.season } </span>  </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pane-info\">\r\n                    <h3>Latest Weather at Elysium Planitia</h3>\r\n                    <p>\r\n                        Insight is taking daily weather measurements (temperature, wind, pressure) on the surface of Mars at Elysium Planitia, a flat, smooth plain near Marsâ€™ equator.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {sols && sols.map((sol,index) =>  (\r\n                        <Box sol={sol}  key={index} index={index}  setSelectedSolIndex={setSelectedSolIndex} />\r\n                    )\r\n        ) }\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Day\r\n","C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Box.js",[],"C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Display.js",[],"C:\\Users\\SAMUEL\\Desktop\\CLONES\\weather-app\\src\\components\\Locale.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":11},{"ruleId":"47","severity":1,"message":"48","line":17,"column":8,"nodeType":"49","endLine":17,"endColumn":21,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Day' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedSolIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedSol' needs the current value of 'selectedSolIndex'.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [selectedSol, selectedSolIndex]",{"range":"56","text":"57"},[467,480],"[selectedSol, selectedSolIndex]"]